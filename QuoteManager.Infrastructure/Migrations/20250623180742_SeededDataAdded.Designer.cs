// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuoteManager.Infrastructure.Data;

#nullable disable

namespace QuoteManager.Infrastructure.Migrations
{
    [DbContext(typeof(QuoteDbContext))]
    [Migration("20250623180742_SeededDataAdded")]
    partial class SeededDataAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuoteManager.Core.Entities.Quote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb3ed0bd-462f-4686-bb1e-fd5e2572a7d1"),
                            CreatedAt = new DateTime(2025, 6, 23, 18, 7, 42, 175, DateTimeKind.Utc).AddTicks(7984),
                            Title = "Sample Quote for Customer",
                            UserId = new Guid("78ccac43-a10e-44eb-916b-e86f0790667e")
                        });
                });

            modelBuilder.Entity("QuoteManager.Core.Entities.QuoteItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("QuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ResellerPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("QuoteItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7c8a542-c2b0-4570-a3be-0e885e2b07ae"),
                            BasePrice = 100.00m,
                            Description = "Sample Product 1",
                            ProductCode = "P001",
                            Quantity = 2,
                            QuoteId = new Guid("cb3ed0bd-462f-4686-bb1e-fd5e2572a7d1"),
                            ResellerPrice = 95.00m
                        },
                        new
                        {
                            Id = new Guid("2849dbe6-086d-4b9a-9e22-244e9125fe74"),
                            BasePrice = 150.00m,
                            Description = "Sample Product 2",
                            ProductCode = "P002",
                            Quantity = 1,
                            QuoteId = new Guid("cb3ed0bd-462f-4686-bb1e-fd5e2572a7d1"),
                            ResellerPrice = 140.00m
                        });
                });

            modelBuilder.Entity("QuoteManager.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2492216f-004f-4999-a668-64cd9a1cd112"),
                            Email = "admin@example.com",
                            PasswordHash = "AdminPassword",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("78ccac43-a10e-44eb-916b-e86f0790667e"),
                            Email = "customer@example.com",
                            PasswordHash = "CustomerPassword",
                            Role = "Customer"
                        });
                });

            modelBuilder.Entity("QuoteManager.Core.Entities.Quote", b =>
                {
                    b.HasOne("QuoteManager.Core.Entities.User", "User")
                        .WithMany("Quotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuoteManager.Core.Entities.QuoteItem", b =>
                {
                    b.HasOne("QuoteManager.Core.Entities.Quote", "Quote")
                        .WithMany("Items")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("QuoteManager.Core.Entities.Quote", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("QuoteManager.Core.Entities.User", b =>
                {
                    b.Navigation("Quotes");
                });
#pragma warning restore 612, 618
        }
    }
}
